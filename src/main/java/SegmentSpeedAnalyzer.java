import org.apache.spark.sql.*;

public class SegmentSpeedAnalyzer {

    public static void main(String[] args) {
        SparkSession spark = SparkSession.builder()
                .appName("SegmentSpeedAnalyzer")
                .master("local[*]")
                .getOrCreate();

        // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤ (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ —É–∂–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã)
        Dataset<Row> segments = spark.read().parquet("processed-segments/");

        segments.createOrReplaceTempView("segments");

        // –°–∞–º–æ–µ –±—ã—Å—Ç—Ä–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–∫–∞ –º–µ–∂–¥—É –æ—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏
        Dataset<Row> fastestSegments = spark.sql(
                "SELECT start_stop, end_stop, start_name, end_name, plate, routeNumber, duration_sec, start_time, end_time " +
                        "FROM (" +
                        "   SELECT *, ROW_NUMBER() OVER (PARTITION BY start_stop, end_stop ORDER BY duration_sec ASC) AS rn " +
                        "   FROM segments" +
                        ") WHERE rn = 1"
        );

        // –°–∞–º–æ–µ –º–µ–¥–ª–µ–Ω–Ω–æ–µ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —É—á–∞—Å—Ç–∫–∞ –º–µ–∂–¥—É –æ—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏
        Dataset<Row> slowestSegments = spark.sql(
                "SELECT start_stop, end_stop, start_name, end_name, plate, routeNumber, duration_sec, start_time, end_time " +
                        "FROM (" +
                        "   SELECT *, ROW_NUMBER() OVER (PARTITION BY start_stop, end_stop ORDER BY duration_sec DESC) AS rn " +
                        "   FROM segments" +
                        ") WHERE rn = 1"
        );

        // –í—ã–≤–æ–¥ —Å–∞–º—ã—Ö –±—ã—Å—Ç—Ä—ã—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤
        System.out.println("üöÄ –°–∞–º—ã–µ –±—ã—Å—Ç—Ä—ã–µ –ø—Ä–æ–µ–∑–¥—ã –º–µ–∂–¥—É –æ—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏:");
        fastestSegments.show(false);

        // –í—ã–≤–æ–¥ —Å–∞–º—ã—Ö –º–µ–¥–ª–µ–Ω–Ω—ã—Ö —Å–µ–≥–º–µ–Ω—Ç–æ–≤
        System.out.println("üê¢ –°–∞–º—ã–µ –º–µ–¥–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–µ–∑–¥—ã –º–µ–∂–¥—É –æ—Å—Ç–∞–Ω–æ–≤–∫–∞–º–∏:");
        slowestSegments.show(false);

        spark.stop();
    }
}
